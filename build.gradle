import java.nio.file.Files

plugins {
    id 'jacoco'
}

group 'com.jsheet'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: "jacoco"
sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.22.0'
    compile 'com.google.apis:google-api-services-sheets:v4-rev478-1.22.0'
    compile group: 'com.codepoetics', name: 'protonpack', version: '1.13'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.assertj:assertj-core:3.8.0'
}

sourceSets {
    test {
        java {
            srcDirs = ["src/test"]
        }
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/jacocoReports")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled = true
    }
}

class Base64 extends DefaultTask {
    String content = null

    @TaskAction
    def decode() {
        if (content == null) {
            throw new RuntimeException("base 64 content should not be null")
        }
        byte[] decoded = content.decodeBase64()
        OutputStream stream = new FileOutputStream("./keys/google_sheet_service_acccount_key.p12")
        stream.write(decoded)
    }
}

task toBase64(type: Base64) {
    content = System.getenv("base64AccountKey")
}